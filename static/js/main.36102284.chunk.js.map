{"version":3,"sources":["Nav/Nav.js","Section/Section.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","className","Section","useState","toDos","setTodos","toDo","setTodo","class","onClick","id","Date","now","text","status","type","value","onChange","e","target","placeholder","map","obj","index","console","log","checked","filter","obj2","name","window","confirm","test","splice","deleteTask","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAUeA,MARf,WACE,OACE,8BACE,qBAAKC,UAAU,MAAf,8B,oBC8HSC,MA3Hf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAkBA,OACE,sBAAKN,UAAU,MAAf,UACE,sBAAKA,UAAU,cAAf,UACE,wCACA,iCACG,IACD,sCAFF,IAEgB,mBAAGO,MAAM,oBAAT,eACd,mBAAGA,MAAM,wBAA2B,UAGxC,qBAAKP,UAAU,aAAf,SACE,yBAEF,sBAAKA,UAAU,QAAf,UACE,mBACEA,UAAU,cACVQ,QAAS,kBACPJ,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEM,GAAIC,KAAKC,MAAOC,KAAMP,EAAMQ,QAAO,SAK7D,uBACEC,KAAK,OACLC,MAAOV,EACPW,SAAU,SAACC,GAAD,OAAOX,EAAQW,EAAEC,OAAOH,QAElCI,YAAY,eAEd,mBAAGZ,MAAM,yBAGX,qBAAKP,UAAU,QAAf,SACGG,EAAMiB,KAAI,SAACC,EAAKC,GACf,OACE,sBAAKtB,UAAU,OAAf,UACE,sBAAKA,UAAU,OAAf,UACE,uBACEc,KAAK,WAELE,SAAU,SAACC,GAETM,QAAQC,IAAIP,EAAEC,OAAOO,UACJ,IAAbJ,EAAIR,OAENU,QAAQC,IAAI,cAGZD,QAAQC,IAAI,gBAEdD,QAAQC,IAAIH,GAEZjB,EACED,EAAMuB,QAAO,SAACC,GAIZ,OAHIA,EAAKlB,KAAOY,EAAIZ,KAClBkB,EAAKd,OAASI,EAAEC,OAAOO,SAElBE,OAIbC,KAAK,GACLnB,GAAG,KAEL,8BACGa,EAAQ,EADX,KACgBD,EAAIT,WAGtB,qBAAKZ,UAAU,QAAf,SACA,mBAAGO,MAAM,eACLC,QAAS,kBAnFN,SAACc,GAElB,GADUO,OAAOC,QAAQ,mCAChB,CACP,IAAMC,EAAI,YAAO5B,GACjB4B,EAAKC,OAAOV,EAAO,GAEnBlB,EAAS2B,QAETR,QAAQC,IAAI,gBA2EeS,CAAWX,gBAOtC,uBACA,uBACA,gDACA,uBACA,uBACCnB,EAAMiB,KAAI,SAACC,GACV,OAAIA,EAAIR,OAEJ,qCACE,qBAAKb,UAAU,OAAf,SACE,qBAAIA,UAAU,iBAAd,UACE,mBAAGO,MAAM,cAAc,cAAY,SADrC,IACkDc,EAAIT,UAIxD,0BAKC,YC9GAsB,MAVf,WACE,OACE,sBAAKlC,UAAU,MAAf,UAED,cAAC,EAAD,IACA,cAAC,EAAD,QCEYmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.36102284.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Nav.css'; \r\nfunction Nav() {\r\n  return (\r\n    <div>\r\n      <div className=\"nav\">M.O.Z.A.N.T.A</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\n\r\n\r\n\r\n\r\n\r\nimport \"./Section.css\";\r\nimport { useState} from \"react\";\r\nfunction Section() {\r\n  const [toDos, setTodos] = useState([]);\r\n  const [toDo, setTodo] = useState(\"\");\r\n   \r\n  //const [id,setId]=useState(null)\r\n  //const [title,setTitle]=useState(\"\")\r\n  \r\n  const deleteTask = (index) => {\r\n    var ask = window.confirm(\"Do you want to delete the task?\");\r\n    if (ask) {\r\n      const test = [...toDos];\r\n      test.splice(index, 1);\r\n\r\n      setTodos(test);\r\n    } else {\r\n      console.log(\"Don't delete\");\r\n    }\r\n  };\r\n \r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"mainHeading\">\r\n        <h4>Tasks </h4>\r\n        <span>\r\n          {\" \"}\r\n          <h1>Task</h1> <i class=\"fas fa-caret-down\"> </i>\r\n          <i class=\"fas fa-times  times\"></i>{\" \"}\r\n        </span>\r\n      </div>\r\n      <div className=\"subHeading\">\r\n        <br />\r\n      </div>\r\n      <div className=\"input\">\r\n        <i\r\n          className=\"fas fa-plus\"\r\n          onClick={() =>\r\n            setTodos([...toDos, { id: Date.now(), text: toDo, status:false }])\r\n        \r\n          }\r\n        ></i>\r\n        \r\n        <input\r\n          type=\"text\"\r\n          value={toDo}\r\n          onChange={(e) => setTodo(e.target.value)}\r\n\r\n          placeholder=\"Add a task\"\r\n        />\r\n        <i class=\"fas fa-ellipsis-v\"></i>\r\n      </div>\r\n\r\n      <div className=\"todos\">\r\n        {toDos.map((obj, index) => {\r\n          return (\r\n            <div className=\"todo\">\r\n              <div className=\"left\">\r\n                <input\r\n                  type=\"checkbox\"\r\n              \r\n                  onChange={(e) => {\r\n                     \r\n                    console.log(e.target.checked);\r\n                    if (obj.status===true)\r\n                    {\r\n                      console.log('CREATED...');\r\n                    }\r\n                    else{\r\n                      console.log('COMPLETED...');\r\n                    }\r\n                    console.log(obj);\r\n\r\n                    setTodos(\r\n                      toDos.filter((obj2) => {\r\n                        if (obj2.id === obj.id) {\r\n                          obj2.status = e.target.checked;\r\n                        }\r\n                        return obj2;\r\n                      })\r\n                    );\r\n                  }}\r\n                  name=\"\"\r\n                  id=\"\"\r\n                />\r\n                <p>\r\n                  {index + 1}. {obj.text}\r\n                </p>\r\n              </div>\r\n              <div className=\"right\">\r\n              <i class=\"fas fa-trash\"\r\n                  onClick={() => deleteTask(index)}\r\n                ></i>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <h2>Completed Task</h2>\r\n      <br />\r\n      <br />\r\n      {toDos.map((obj) => {\r\n        if (obj.status) {\r\n          return (\r\n            <>\r\n              <div className=\"done\">\r\n                <h4 className=\"completed-task\">\r\n                  <i class=\"fa fa-check\" aria-hidden=\"true\"></i> {obj.text}\r\n                </h4>\r\n              </div>\r\n            \r\n              <br></br>\r\n            </>\r\n          );\r\n        }\r\n\r\n        return null;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Section;","\nimport './App.css';\nimport Nav from './Nav/Nav';\nimport Section from './Section/Section';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n   <Nav/>\n   <Section/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}